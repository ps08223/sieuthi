package UI;

import DAO.HoaDonDAO;
import DAO.KhachHangDAO;
import DAO.PhieuNhapDAO;
import DAO.SanPhamDAO;
import DAO.TaiKhoanNVDAO;
import Entities.KhachHang;
import Entities.PhieuNhap;
import Entities.PhieuNhapCT;
import Entities.SanPham;
import Entities.TKHoatDong;
import Helper.CheckHelper;
import Helper.DialogHelper;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class PhieuNhapFrame extends javax.swing.JFrame {
    List<PhieuNhap> pnList;
    List<PhieuNhapCT> ctList;
    List<SanPham> spList;
    int ChucNang = 0;
    public PhieuNhapFrame() {
        initComponents();
        this.setTitle("Quản Lý Phiếu Nhập");
        jPanel11.setOpaque(false);
        
        setLocationRelativeTo(null);
        
        ShowDanhSach();
        ShowThongTin(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblPNDSPN = new javax.swing.JTable();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        jPanel11 = new javax.swing.JPanel();
        lblPNMaPN = new javax.swing.JLabel();
        lblPNMaNV = new javax.swing.JLabel();
        txtPNMaPN = new javax.swing.JTextField();
        btnPNTimKiem = new javax.swing.JButton();
        txtPNMaNV = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPNDSSP = new javax.swing.JTable();
        lblPNTenSP = new javax.swing.JLabel();
        lblPNGia = new javax.swing.JLabel();
        txtPNGia = new javax.swing.JTextField();
        lblPNSL = new javax.swing.JLabel();
        txtPNSL = new javax.swing.JTextField();
        btnPNThem = new javax.swing.JButton();
        lblPNChietKhau = new javax.swing.JLabel();
        txtPnChietKhau = new javax.swing.JTextField();
        lblPNTong = new javax.swing.JLabel();
        txtPNTong = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboPNTenSP = new javax.swing.JComboBox<>();
        lblPNSPMoi = new javax.swing.JLabel();
        txtPNMaDM = new javax.swing.JTextField();
        lblPNMaDM = new javax.swing.JLabel();
        txtPNSPMoi1 = new javax.swing.JTextField();
        btnPNXoa = new javax.swing.JButton();
        btnPNLuu = new javax.swing.JButton();
        btnPNTaoMoi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        kGradientPanel5.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel5.setkStartColor(new java.awt.Color(153, 0, 153));

        tblPNDSPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Phiếu Nhập", "Mã Nhân Viên", "Ngày Nhập", "Tổng Tiền"
            }
        ));
        tblPNDSPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPNDSPNMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblPNDSPN);

        kGradientPanel4.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel4.setkStartColor(new java.awt.Color(153, 0, 153));

        lblPNMaPN.setBackground(new java.awt.Color(255, 255, 255));
        lblPNMaPN.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNMaPN.setForeground(new java.awt.Color(255, 255, 255));
        lblPNMaPN.setText("Mã Phiếu Nhập");

        lblPNMaNV.setBackground(new java.awt.Color(255, 255, 255));
        lblPNMaNV.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNMaNV.setForeground(new java.awt.Color(255, 255, 255));
        lblPNMaNV.setText("Mã Nhân Viên");

        btnPNTimKiem.setText("Tìm Kiếm");
        btnPNTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPNTimKiemActionPerformed(evt);
            }
        });

        tblPNDSSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tên Sản Phẩm", "Đơn Giá", "Số Lượng", "Chiết Khấu", "Tổng Tiền"
            }
        ));
        tblPNDSSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPNDSSPMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPNDSSP);

        lblPNTenSP.setBackground(new java.awt.Color(255, 255, 255));
        lblPNTenSP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNTenSP.setForeground(new java.awt.Color(255, 255, 255));
        lblPNTenSP.setText("Tên Sản Phẩm");

        lblPNGia.setBackground(new java.awt.Color(255, 255, 255));
        lblPNGia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNGia.setForeground(new java.awt.Color(255, 255, 255));
        lblPNGia.setText("Đơn Giá");

        txtPNGia.setEditable(false);

        lblPNSL.setBackground(new java.awt.Color(255, 255, 255));
        lblPNSL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNSL.setForeground(new java.awt.Color(255, 255, 255));
        lblPNSL.setText("Số Lượng");

        btnPNThem.setText("Thêm Vào Phiếu");
        btnPNThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPNThemActionPerformed(evt);
            }
        });

        lblPNChietKhau.setBackground(new java.awt.Color(255, 255, 255));
        lblPNChietKhau.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNChietKhau.setForeground(new java.awt.Color(255, 255, 255));
        lblPNChietKhau.setText("Chiết Khấu");

        lblPNTong.setBackground(new java.awt.Color(255, 255, 255));
        lblPNTong.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNTong.setForeground(new java.awt.Color(255, 255, 255));
        lblPNTong.setText("Tổng");

        txtPNTong.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("DANH SÁCH SẢN PHẨM");

        cboPNTenSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboPNTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPNTenSPActionPerformed(evt);
            }
        });

        lblPNSPMoi.setBackground(new java.awt.Color(255, 255, 255));
        lblPNSPMoi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNSPMoi.setForeground(new java.awt.Color(255, 255, 255));
        lblPNSPMoi.setText("Sản Phẩm Mới");

        txtPNMaDM.setEnabled(false);
        txtPNMaDM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPNMaDMActionPerformed(evt);
            }
        });

        lblPNMaDM.setBackground(new java.awt.Color(255, 255, 255));
        lblPNMaDM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPNMaDM.setForeground(new java.awt.Color(255, 255, 255));
        lblPNMaDM.setText("Mã Danh Mục");

        txtPNSPMoi1.setEnabled(false);
        txtPNSPMoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPNSPMoi1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(lblPNMaPN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPNMaPN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPNTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(lblPNChietKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPnChietKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblPNTong, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPNTong, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(lblPNSL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPNSL, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addComponent(lblPNGia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPNGia)))
                                .addGap(10, 10, 10)
                                .addComponent(btnPNThem, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(lblPNMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPNMaNV))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPNSPMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPNTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPNMaDM, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboPNTenSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPNMaDM)
                                    .addComponent(txtPNSPMoi1))))
                        .addGap(115, 115, 115)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblPNMaPN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPNMaPN)
                    .addComponent(btnPNTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPNMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPNMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPNTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboPNTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPNSPMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPNSPMoi1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPNMaDM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPNMaDM, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPNGia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPNGia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPNSL, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPNSL, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnPNThem, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPnChietKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPNChietKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPNTong, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPNTong, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnPNXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnPNXoa.setText("Xóa Sản Phẩm");
        btnPNXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPNXoaActionPerformed(evt);
            }
        });

        btnPNLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save.png"))); // NOI18N
        btnPNLuu.setText("Lưu");
        btnPNLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPNLuuActionPerformed(evt);
            }
        });

        btnPNTaoMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/loop (1).png"))); // NOI18N
        btnPNTaoMoi.setText("Tạo Mới");
        btnPNTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPNTaoMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnPNXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPNTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPNLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPNXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPNTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPNLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DANH SÁCH PHIẾU NHẬP");

        javax.swing.GroupLayout kGradientPanel5Layout = new javax.swing.GroupLayout(kGradientPanel5);
        kGradientPanel5.setLayout(kGradientPanel5Layout);
        kGradientPanel5Layout.setHorizontalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        kGradientPanel5Layout.setVerticalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void tblPNDSPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPNDSPNMouseClicked
        ShowThongTin(tblPNDSPN.getSelectedRow());
    }//GEN-LAST:event_tblPNDSPNMouseClicked

    private void btnPNThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPNThemActionPerformed
        if (!cboPNTenSP.getSelectedItem().equals("Sản phẩm mới")) {
            if (KiemTraThemSP()) {
                DefaultTableModel model = (DefaultTableModel) tblPNDSSP.getModel();
                model.setRowCount(tblPNDSSP.getRowCount());
                
                Vector vector = new Vector();
                vector.add(cboPNTenSP.getSelectedItem());
                vector.add(txtPNGia.getText().replace("VNĐ", "").replace(",", ""));
                vector.add(txtPNSL.getText());
                vector.add(txtPnChietKhau.getText());
                int gia = Integer.parseInt(txtPNGia.getText().replace("VNĐ", "").replace(",", ""));
                int sl = Integer.parseInt(txtPNSL.getText());
                int ck = Integer.parseInt(txtPnChietKhau.getText());
                int tong = (gia-(gia*ck/100))*sl;
                DecimalFormat format = new DecimalFormat("###,###");
                String s = format.format(tong);
                vector.add(s + "VNĐ");
                model.addRow(vector);
                int i = tblPNDSSP.getRowCount() - 1;
                tblPNDSSP.setRowSelectionInterval(i, i);
                TongTien();
            }
        } else {
            if (KiemTraSPMoi()) {
                DefaultTableModel model = (DefaultTableModel) tblPNDSSP.getModel();
                model.setRowCount(tblPNDSSP.getRowCount());
                
                Vector vector = new Vector();
                SanPhamDAO spDAO = new SanPhamDAO();
                spDAO.Insert(Integer.parseInt(txtPNMaDM.getText()), txtPNSPMoi1.getText(), Integer.parseInt(txtPNGia.getText()), Integer.parseInt(txtPNSL.getText()));
                vector.add(txtPNSPMoi1.getText());
                vector.add(txtPNGia.getText());
                vector.add(txtPNSL.getText());
                vector.add(txtPnChietKhau.getText());
                int gia = Integer.parseInt(txtPNGia.getText().replace("VNĐ", "").replace(",", ""));
                int sl = Integer.parseInt(txtPNSL.getText());
                int ck = Integer.parseInt(txtPnChietKhau.getText());
                int tong = (gia-(gia*ck/100))*sl;
                DecimalFormat format = new DecimalFormat("###,###");
                String s = format.format(tong);
                vector.add(s + "VNĐ");
                model.addRow(vector);
                int i = tblPNDSSP.getRowCount() - 1;
                tblPNDSSP.setRowSelectionInterval(i, i);
                TongTien();
            }
        }
    }//GEN-LAST:event_btnPNThemActionPerformed

    private void tblPNDSSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPNDSSPMouseClicked
        ShowThongTinSP(tblPNDSSP.getSelectedRow());
    }//GEN-LAST:event_tblPNDSSPMouseClicked

    private void btnPNTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPNTimKiemActionPerformed
        int MaPN;
        
        if (!CheckHelper.So(txtPNMaPN.getText(), "Mã phiếu nhập", this)) {
            return;
        } else {
            MaPN = Integer.parseInt(txtPNMaPN.getText());
        }
        
        XoaMauNen();
        boolean found = false;
        for (PhieuNhap pn: pnList) {
            if (pn.MaPN == MaPN) {
                DialogHelper.alert(this, "Tìm thấy phiếu nhập với mã tương ứng!");
                found = true;
                ChucNang = 0;
                for (int i = 0; i < tblPNDSPN.getRowCount(); i++) {
                    if (tblPNDSPN.getValueAt(i, 0).toString().equals(Integer.toString(MaPN))) {
                        tblPNDSPN.setRowSelectionInterval(i, i);
                    }
                }
                txtPNMaNV.setText(Integer.toString(pn.MaNV));
                ShowSP(MaPN);
            }
        }
        
        if (!found) {
            DialogHelper.alert(this, "Không tìm thấy mã đơn hàng tương ứng!");
        }
    }//GEN-LAST:event_btnPNTimKiemActionPerformed

    private void btnPNXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPNXoaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPNDSSP.getModel();
        int[] i = tblPNDSSP.getSelectedRows();
        int soHang = tblPNDSSP.getRowCount();
        
        for (int j = soHang; j >= 0; j--) {
            for (int a: i) {
                if (j == a) {
                    model.removeRow(j);
                }
            }
        }
        
        TongTien();  
    }//GEN-LAST:event_btnPNXoaActionPerformed

    private void btnPNLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPNLuuActionPerformed
        int hang = tblPNDSPN.getSelectedRow();
        
        PhieuNhapDAO pnDAO = new PhieuNhapDAO();
        SanPhamDAO spDAO = new SanPhamDAO();
        if (ChucNang == 0) {
            if (KiemTraCapNhat()) {
                boolean found = false;
                for (PhieuNhap pn: pnList) {
                    if (pn.MaPN == Integer.parseInt(txtPNMaPN.getText())) {
                        found = true;
                        
                        pnDAO.PNUpdate(Integer.parseInt(txtPNMaNV.getText()), Integer.parseInt(txtPNMaPN.getText()));
                        pnDAO.PNCTDelete(Integer.parseInt(txtPNMaPN.getText()));
                        for (int i = 0; i < tblPNDSSP.getRowCount(); i++) {
                            pnDAO.PNCTInsert(Integer.parseInt(txtPNMaPN.getText()), 
                                    spDAO.MaSanPham(tblPNDSSP.getValueAt(i, 0).toString()), 
                                    Integer.parseInt(tblPNDSSP.getValueAt(i, 2).toString()), 
                                    Integer.parseInt(tblPNDSSP.getValueAt(i, 3).toString()));
                        }
                
                        DialogHelper.alert(this, "Cập nhật thành công!");
                        ShowDanhSach();
                        ShowThongTin(hang);
                    }
                }
                    
                if (!found) {
                    DialogHelper.alert(this, "Mã đơn hàng không tồn tại!");
                }
            }
        } else {
            if (KiemTraThemMoi()) {    
                pnDAO.PNInsert(Integer.parseInt(txtPNMaNV.getText()));
                int MaPN = pnDAO.MaPNMoiNhat();

                for (int i = 0; i < tblPNDSSP.getRowCount(); i++) {
                    pnDAO.PNCTInsert(MaPN, 
                            spDAO.MaSanPham(tblPNDSSP.getValueAt(i, 0).toString()), 
                            Integer.parseInt(tblPNDSSP.getValueAt(i, 2).toString()), 
                            Integer.parseInt(tblPNDSSP.getValueAt(i, 3).toString()));
                }

                DialogHelper.alert(this, "Thêm mới thành công!");
                ShowDanhSach();
                ShowThongTin(tblPNDSPN.getRowCount()-1);
            }
        }
    }//GEN-LAST:event_btnPNLuuActionPerformed

    private void btnPNTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPNTaoMoiActionPerformed
        TaiKhoanNVDAO tknvDAO = new TaiKhoanNVDAO();
        
        boolean Login = false;
        int MaNV = 0;
        if (!TKHoatDong.TaiKhoan.isEmpty()) {
            Login = true;
            MaNV = tknvDAO.MaNhanVien(TKHoatDong.TaiKhoan);
            txtPNMaNV.setEditable(false);
        }
        
        if (!Login) {
            DialogHelper.alert(this, "Vui lòng đăng nhập lại!");
        }
        
        txtPNMaNV.setText(Integer.toString(MaNV));
            
        XoaTrang();
        ChucNang = 1;
    }//GEN-LAST:event_btnPNTaoMoiActionPerformed

    private void txtPNMaDMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPNMaDMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPNMaDMActionPerformed

    private void cboPNTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPNTenSPActionPerformed
        if (cboPNTenSP.getSelectedItem().equals("Sản phẩm mới")) {
            txtPNMaDM.setEnabled(true);
            txtPNSPMoi1.setEnabled(true);
            txtPNGia.setEditable(true);
            txtPNGia.setText("");
        } else {
            txtPNMaDM.setEnabled(false);
            txtPNSPMoi1.setEnabled(false);
            txtPNGia.setEditable(false);
            txtPNSPMoi1.setText("");
            txtPNMaDM.setText("");
            HoaDonDAO hdDAO = new HoaDonDAO();
            SanPhamDAO spDAO = new SanPhamDAO();
            int gia = hdDAO.GiaSanPham(spDAO.MaSanPham(cboPNTenSP.getSelectedItem().toString()));
            DecimalFormat format = new DecimalFormat("###,###");
            String s = format.format(gia);
            txtPNGia.setText(s + "VNĐ");
        }
    }//GEN-LAST:event_cboPNTenSPActionPerformed

    private void txtPNSPMoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPNSPMoi1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPNSPMoi1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (TKHoatDong.VaiTro.equals("1")) {
            this.dispose();
            QuanLy2 ql2 = new QuanLy2();
            ql2.pack();
            ql2.setVisible(true);
        } else {
            this.dispose();
            QuanLy1 ql1 = new QuanLy1();
            ql1.pack();
            ql1.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuNhapFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhieuNhapFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPNLuu;
    private javax.swing.JButton btnPNTaoMoi;
    private javax.swing.JButton btnPNThem;
    private javax.swing.JButton btnPNTimKiem;
    private javax.swing.JButton btnPNXoa;
    private javax.swing.JComboBox<String> cboPNTenSP;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField2;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private javax.swing.JLabel lblPNChietKhau;
    private javax.swing.JLabel lblPNGia;
    private javax.swing.JLabel lblPNMaDM;
    private javax.swing.JLabel lblPNMaNV;
    private javax.swing.JLabel lblPNMaPN;
    private javax.swing.JLabel lblPNSL;
    private javax.swing.JLabel lblPNSPMoi;
    private javax.swing.JLabel lblPNTenSP;
    private javax.swing.JLabel lblPNTong;
    private javax.swing.JTable tblPNDSPN;
    private javax.swing.JTable tblPNDSSP;
    private javax.swing.JTextField txtPNGia;
    private javax.swing.JTextField txtPNMaDM;
    private javax.swing.JTextField txtPNMaNV;
    private javax.swing.JTextField txtPNMaPN;
    private javax.swing.JTextField txtPNSL;
    private javax.swing.JTextField txtPNSPMoi1;
    private javax.swing.JTextField txtPNTong;
    private javax.swing.JTextField txtPnChietKhau;
    // End of variables declaration//GEN-END:variables
    public void ShowDanhSach() {
        SanPhamDAO spDAO = new SanPhamDAO();
        spList = spDAO.Select();
        DefaultComboBoxModel cmodel = new DefaultComboBoxModel();
        for (int j = 0; j < spList.size(); j++) {
            Entities.SanPham sp = spList.get(j);
            cmodel.addElement(sp.Ten);
        }
        cmodel.addElement("Sản phẩm mới");
        cboPNTenSP.setModel(cmodel);
        
        PhieuNhapDAO pnDAO = new PhieuNhapDAO();
        pnList = pnDAO.Select();
        
        DanhSach(pnList);
    }
    
    public void DanhSach(List<PhieuNhap> list) {
        PhieuNhapDAO pnDAO = new PhieuNhapDAO();
        DefaultTableModel model = (DefaultTableModel) tblPNDSPN.getModel();
        model.setRowCount(0);
        
        for (PhieuNhap pn: list) {
            Vector vector = new Vector();
            vector.add(pn.MaPN);
            vector.add(pn.MaNV);
            vector.add(pn.NgayNhap);
            int tong = pnDAO.TongPhieuNhap(pn.MaPN);
            DecimalFormat format = new DecimalFormat("###,###");
            String s = format.format(tong);
            vector.add(s + "VNĐ");
            model.addRow(vector);
        }
    }
    
    public void ShowThongTin(int i) {
        ChucNang = 0;
        tblPNDSPN.setRowSelectionInterval(i, i);
        for (PhieuNhap pn: pnList) {
            if (tblPNDSPN.getValueAt(i, 0).toString().equals(Integer.toString(pn.MaPN))) {
                txtPNMaPN.setText(Integer.toString(pn.MaPN));
                txtPNMaNV.setText(Integer.toString(pn.MaNV));              
                ShowSP(pn.MaPN);
            }
        }
    }
    
    public void ShowSP(int MaPN) {
        PhieuNhapDAO pnDAO = new PhieuNhapDAO();
        HoaDonDAO hdDAO = new HoaDonDAO();
        
        ctList = pnDAO.PNCTSelect();
        
        DefaultTableModel model = (DefaultTableModel) tblPNDSSP.getModel();
        model.setRowCount(0);
        
        for (PhieuNhapCT ct: ctList) {
            if (ct.MaPN == MaPN) {
                int gia = hdDAO.GiaSanPham(ct.MaSP);
                
                Vector vector = new Vector();
                vector.add(hdDAO.TenSanPham(ct.MaSP));
                vector.add(gia);
                vector.add(ct.SoLuong);
                vector.add(ct.ChietKhau);
                int tong = (gia-(gia*ct.ChietKhau/100))*ct.SoLuong;
                DecimalFormat format = new DecimalFormat("###,###");
                String s = format.format(tong);
                vector.add(s + "VNĐ");
                model.addRow(vector);
            }
        }
        
        if (model.getRowCount() > 0) {
            ShowThongTinSP(0);
            TongTien();
        }
    }
    
    public void ShowThongTinSP(int i) {
        tblPNDSSP.setRowSelectionInterval(i, i);
        cboPNTenSP.setSelectedItem(tblPNDSSP.getValueAt(i, 0).toString());
        txtPNSL.setText(tblPNDSSP.getValueAt(i, 2).toString());
        txtPnChietKhau.setText(tblPNDSSP.getValueAt(i, 3).toString());
    }
    
    public void TongTien() {
        int tong = 0;
        
        for (int i = 0; i < tblPNDSSP.getRowCount(); i++) {
            int gia = Integer.parseInt(tblPNDSSP.getValueAt(i, 1).toString());
            int sl = Integer.parseInt(tblPNDSSP.getValueAt(i, 2).toString());
            int ck = Integer.parseInt(tblPNDSSP.getValueAt(i, 3).toString());
            
            tong += (gia-(gia*ck/100))*sl;
        }
        
        DecimalFormat format = new DecimalFormat("###,###");
        String s = format.format(tong);

        txtPNTong.setText(s + "VNĐ");
    }
    
    public void XoaMauNen() {
        txtPNMaPN.setBackground(Color.white);
        txtPNGia.setBackground(Color.white);
        txtPNMaNV.setBackground(Color.white);
        txtPNSL.setBackground(Color.white);
        txtPNMaDM.setBackground(Color.white);
        txtPnChietKhau.setBackground(Color.white);
        txtPNMaDM.setBackground(Color.white);
    }
    
    public void XoaTrang() {
        cboPNTenSP.setSelectedIndex(0);
        txtPNMaDM.setText("");
        txtPNSL.setText("");
        txtPnChietKhau.setText("");
        txtPNTong.setText("0VNĐ");
        DefaultTableModel model = (DefaultTableModel) tblPNDSSP.getModel();
        model.setRowCount(0);
    }
    
    public boolean KiemTraThemSP() {
        if (CheckHelper.SoLonHon(txtPNSL.getText(), "Số lượng", 0, this)) {
            XoaMauNen();
            if (CheckHelper.KhoangSo(txtPnChietKhau.getText(), "Chiết khấu", 0, 100, this)) {
                XoaMauNen();
                return true;
            } else {
                txtPnChietKhau.setBackground(Color.yellow);
                return false;
            }
        } else {
            txtPNSL.setBackground(Color.yellow);
            return false;
        }
    }
    
    public boolean KiemTraSPMoi() {
        if (CheckHelper.Chuoi(txtPNMaDM.getText(), 50, "Tên sản phẩm", this)) {
            XoaMauNen();
            if (CheckHelper.SoLonHon(txtPNGia.getText(), "Giá sản phẩm", 0, this)) {
                XoaMauNen();
                if (CheckHelper.KhoangSo(txtPNMaDM.getText(), "Mã danh mục", 1, 2, this)) {
                    XoaMauNen();
                    return true;
                } else {
                    txtPNMaDM.setBackground(Color.yellow);
                    return false;
                }
            } else {
                txtPNGia.setBackground(Color.yellow);
                return false;
            }
        } else {
            txtPNMaDM.setBackground(Color.yellow);
            return false;
        }
    }
    
    public boolean KiemTraThemMoi() {
        if (CheckHelper.SoLonHon(txtPNMaNV.getText(), "Mã nhân viên", 0, this)) {
            XoaMauNen();
            return true;
        } else {
            txtPNMaNV.setBackground(Color.yellow);
            return false;
        }
    }
    
    public boolean KiemTraCapNhat() {
        if (CheckHelper.SoLonHon(txtPNMaPN.getText(), "Mã phiếu nhập", 0, this)) {
            XoaMauNen();
            return KiemTraThemMoi();
        } else {
            txtPNMaPN.setBackground(Color.yellow);
            return false;
        }
    }
}
