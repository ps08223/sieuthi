/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.KhachHangDAO;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import Entities.KhachHang;
import Entities.TKHoatDong;
import Helper.CheckHelper;
import Helper.DialogHelper;
import java.awt.Color;

/**
 *
 * @author minhchau
 */
public class KhachHangFrame extends javax.swing.JFrame {
    List<KhachHang> khList;
    public KhachHangFrame() {
        initComponents();
        init();
        
    }
    void init()
    {
         setTitle("Quản Lý Khách Hàng");
         this.pack();
         setLocationRelativeTo(null);
         
         ShowDanhSach();
         ShowThongTin(0);
//         btgGioiTinh.clearSelection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgGioiTinh = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        btgThanhVien = new javax.swing.ButtonGroup();
        pnlEdit = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        btnKHTaoMoi = new javax.swing.JButton();
        btnKHThemMoi = new javax.swing.JButton();
        btnKHCapNhat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblKHTenKH = new javax.swing.JLabel();
        rdoKHTV = new javax.swing.JRadioButton();
        rdoKHKH = new javax.swing.JRadioButton();
        lblKHMaKH = new javax.swing.JLabel();
        lblKHThanhVien = new javax.swing.JLabel();
        lblKHEmail = new javax.swing.JLabel();
        lblKHDienThoai = new javax.swing.JLabel();
        txtKHMaKH = new javax.swing.JTextField();
        txtKHTenKH = new javax.swing.JTextField();
        txtKHMail = new javax.swing.JTextField();
        txtKHSoDT = new javax.swing.JTextField();
        rdoKHNu = new javax.swing.JRadioButton();
        lblKHGioiTinh = new javax.swing.JLabel();
        rdoKHNam = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKHDanhSach = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtKHTimKiem = new javax.swing.JTextField();
        btnKHTimKiem = new javax.swing.JButton();

        btgGioiTinh.add(rdoKHKH);
        btgGioiTinh.add(rdoKHTV);

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        kGradientPanel3.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel3.setkGradientFocus(600);
        kGradientPanel3.setkStartColor(new java.awt.Color(153, 0, 153));

        btnKHTaoMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/loop (1).png"))); // NOI18N
        btnKHTaoMoi.setText("Tạo Mới");
        btnKHTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKHTaoMoiActionPerformed(evt);
            }
        });

        btnKHThemMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        btnKHThemMoi.setText("Thêm Mới");
        btnKHThemMoi.setEnabled(false);
        btnKHThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKHThemMoiActionPerformed(evt);
            }
        });

        btnKHCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save.png"))); // NOI18N
        btnKHCapNhat.setText("Cập Nhật");
        btnKHCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKHCapNhatActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblKHTenKH.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKHTenKH.setText("Tên Khách Hàng");

        btgThanhVien.add(rdoKHTV);
        rdoKHTV.setSelected(true);
        rdoKHTV.setText("Có");

        btgThanhVien.add(rdoKHKH);
        rdoKHKH.setText("Không");

        lblKHMaKH.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKHMaKH.setText("Mã Khách Hàng");

        lblKHThanhVien.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKHThanhVien.setText("Thành Viên");

        lblKHEmail.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKHEmail.setText("Email");

        lblKHDienThoai.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKHDienThoai.setText("Điện Thoại");

        txtKHMaKH.setEditable(false);
        txtKHMaKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        txtKHTenKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        txtKHMail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        txtKHSoDT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        btgGioiTinh.add(rdoKHNu);
        rdoKHNu.setSelected(true);
        rdoKHNu.setText("Nữ");

        lblKHGioiTinh.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblKHGioiTinh.setText("Giới Tính");

        btgGioiTinh.add(rdoKHNam);
        rdoKHNam.setText("Nam");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKHTenKH)
                            .addComponent(lblKHMaKH))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKHSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKHDienThoai)
                            .addComponent(txtKHMail, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKHTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKHEmail)
                            .addComponent(txtKHMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(rdoKHTV)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoKHKH))
                                    .addComponent(lblKHThanhVien))))
                        .addGap(0, 84, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(rdoKHNu)
                            .addGap(18, 18, 18)
                            .addComponent(rdoKHNam))
                        .addComponent(lblKHGioiTinh))
                    .addContainerGap(135, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblKHMaKH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtKHMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(lblKHTenKH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKHTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(lblKHEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtKHMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblKHDienThoai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtKHSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblKHThanhVien)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoKHTV)
                    .addComponent(rdoKHKH))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(115, 115, 115)
                    .addComponent(lblKHGioiTinh)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdoKHNu)
                        .addComponent(rdoKHNam))
                    .addContainerGap(203, Short.MAX_VALUE)))
        );

        tblKHDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Tên KH", "Email", "Số ĐT", "Thành Viên"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKHDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKHDanhSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKHDanhSach);
        if (tblKHDanhSach.getColumnModel().getColumnCount() > 0) {
            tblKHDanhSach.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblKHDanhSach.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("DANH SÁCH KHÁCH HÀNG");

        btnKHTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Start-Menu-Search-icon.png"))); // NOI18N
        btnKHTimKiem.setText("Tìm Kiếm");
        btnKHTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKHTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtKHTimKiem, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addComponent(btnKHTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(btnKHThemMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKHCapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKHTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
                .addContainerGap())
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKHTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKHTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnKHTaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKHThemMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKHCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKHThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKHThemMoiActionPerformed
        if (KiemTra()) {
            KhachHangDAO khDAO = new KhachHangDAO();
            int GioiTinh, ThanhVien;
            if (rdoKHNam.isSelected()) {
                GioiTinh = 1;
            } else {
                GioiTinh = 0;
            }
            if (rdoKHTV.isSelected()) {
                ThanhVien = 1;
            } else {
                ThanhVien = 0;
            }
            
            khDAO.ThemMoiKhachHang(txtKHTenKH.getText(), GioiTinh, txtKHMail.getText(), txtKHSoDT.getText(), ThanhVien);
            DialogHelper.alert(this, "Thêm mới thành công!");
            btnKHThemMoi.setEnabled(false);
            ShowDanhSach();
            ShowThongTin(khList.size()-1);
        }
    }//GEN-LAST:event_btnKHThemMoiActionPerformed

    private void btnKHCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKHCapNhatActionPerformed
        if (KiemTra()) {
            KhachHangDAO khDAO = new KhachHangDAO();
            int GioiTinh, ThanhVien;
            if (rdoKHNam.isSelected()) {
                GioiTinh = 1;
            } else {
                GioiTinh = 0;
            }
            if (rdoKHTV.isSelected()) {
                ThanhVien = 1;
            } else {
                ThanhVien = 0;
            }
            
            khDAO.CapNhatKhachHang(txtKHTenKH.getText(), GioiTinh, txtKHMail.getText(), 
                    txtKHSoDT.getText(), ThanhVien, Integer.parseInt(txtKHMaKH.getText()));
            DialogHelper.alert(this, "Cập nhật thành công!");
            ShowDanhSach();
            ShowThongTin(0);
        }
    }//GEN-LAST:event_btnKHCapNhatActionPerformed

    private void btnKHTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKHTaoMoiActionPerformed
        XoaTrang();
        btnKHCapNhat.setEnabled(false);
        btnKHThemMoi.setEnabled(true);
    }//GEN-LAST:event_btnKHTaoMoiActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void btnKHTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKHTimKiemActionPerformed
        String sql = "Select * From KhachHang Where MaKhachHang Like ? Or TenKhachHang Like ? Or Email Like ? Or SoDT Like ?";
        String a = txtKHTimKiem.getText().trim();
        
        KhachHangDAO khDAO = new KhachHangDAO();
        List<KhachHang> tlist = khDAO.Select(sql, "%" + a + "%", "%" + a + "%", "%" + a + "%", "%" + a + "%");
        if (tlist.size() > 0) {
            DialogHelper.alert(this, "Tìm thành công!");
            DanhSach(tlist);
            ShowThongTin(0);
        } else {
            DialogHelper.alert(this, "Không tìm thấy khách hàng với thông tin tương ứng (mã khách hàng, tên, email, số điện thoại)!");
        }
    }//GEN-LAST:event_btnKHTimKiemActionPerformed

    private void tblKHDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKHDanhSachMouseClicked
        int i = tblKHDanhSach.getSelectedRow();
        btnKHThemMoi.setEnabled(false); 
        ShowThongTin(i);
    }//GEN-LAST:event_tblKHDanhSachMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (TKHoatDong.VaiTro.equals("1")) {
            this.dispose();
            QuanLy2 ql2 = new QuanLy2();
            ql2.pack();
            ql2.setVisible(true);
        } else {
            this.dispose();
            QuanLy1 ql1 = new QuanLy1();
            ql1.pack();
            ql1.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhachHangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhachHangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhachHangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhachHangFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhachHangFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgGioiTinh;
    private javax.swing.ButtonGroup btgThanhVien;
    private javax.swing.JButton btnKHCapNhat;
    private javax.swing.JButton btnKHTaoMoi;
    private javax.swing.JButton btnKHThemMoi;
    private javax.swing.JButton btnKHTimKiem;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel3;
    private javax.swing.JLabel lblKHDienThoai;
    private javax.swing.JLabel lblKHEmail;
    private javax.swing.JLabel lblKHGioiTinh;
    private javax.swing.JLabel lblKHMaKH;
    private javax.swing.JLabel lblKHTenKH;
    private javax.swing.JLabel lblKHThanhVien;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JRadioButton rdoKHKH;
    private javax.swing.JRadioButton rdoKHNam;
    private javax.swing.JRadioButton rdoKHNu;
    private javax.swing.JRadioButton rdoKHTV;
    private javax.swing.JTable tblKHDanhSach;
    private javax.swing.JTextField txtKHMaKH;
    private javax.swing.JTextField txtKHMail;
    private javax.swing.JTextField txtKHSoDT;
    private javax.swing.JTextField txtKHTenKH;
    private javax.swing.JTextField txtKHTimKiem;
    // End of variables declaration//GEN-END:variables
    public void ShowDanhSach() {
        KhachHangDAO khDAO = new KhachHangDAO();
        khList = khDAO.Select();
        
        DanhSach(khList);
    }
    
    public void DanhSach(List<KhachHang> list) {
        DefaultTableModel model = (DefaultTableModel) tblKHDanhSach.getModel();
        model.setRowCount(0);
        
        for (KhachHang kh: list) {
            Vector vector = new Vector();
            vector.add(kh.MaKH);
            vector.add(kh.TenKH);
            vector.add(kh.Mail);
            vector.add(kh.SoDT);
            vector.add(kh.ThanhVien);
            model.addRow(vector);
        }
    }
    
    public void ShowThongTin(int i) {
        tblKHDanhSach.setRowSelectionInterval(i, i);
        for (KhachHang kh: khList) {
            if (tblKHDanhSach.getValueAt(i, 0).toString().equals(Integer.toString(kh.MaKH))) {
                txtKHMaKH.setText(Integer.toString(kh.MaKH));
                txtKHMail.setText(kh.Mail);
                txtKHSoDT.setText(kh.SoDT);
                txtKHTenKH.setText(kh.TenKH);
                if (kh.GioiTinh.equals("Nam")) {
                    rdoKHNam.setSelected(true);
                } else if (kh.GioiTinh.equals("Nữ")) {
                    rdoKHNu.setSelected(true);
                } else {
                    btgGioiTinh.clearSelection();
                }
                if (kh.ThanhVien) {
                    rdoKHTV.setSelected(true);
                } else {
                    rdoKHKH.setSelected(true);
                }
            }
        }
    }
    
    public void XoaTrang() {
        int i = tblKHDanhSach.getSelectedRow();
        tblKHDanhSach.removeRowSelectionInterval(i, i);
        txtKHMaKH.setText("");
        txtKHMail.setText("");
        txtKHSoDT.setText("");
        txtKHTenKH.setText("");
        txtKHTimKiem.setText("");
        rdoKHNu.setSelected(true);
        rdoKHTV.setSelected(true);
    }
    
    public void XoaMauNen() {
        txtKHTenKH.setBackground(Color.white);
        txtKHMail.setBackground(Color.white);
        txtKHSoDT.setBackground(Color.white);
    }
    
    public boolean KiemTra() {
        if (CheckHelper.Chuoi(txtKHTenKH.getText(), 50, "Tên khách hàng", this)) {
            XoaMauNen();
            if (!rdoKHNam.isSelected() && !rdoKHNu.isSelected()) {
                DialogHelper.alert(this, "Xin hãy chọn giới tính cho khách hàng!");
                return false;
            } else {
                XoaMauNen();
                if (CheckHelper.Chuoi(txtKHMail.getText(), 255, "Email", this)) {
                    XoaMauNen();
                    if (CheckHelper.Email(txtKHMail.getText(), this)) {
                        XoaMauNen();
                        if (CheckHelper.ChuoiSo(txtKHSoDT.getText(), 20, "Số ĐT", this)) {
                            XoaMauNen();
                            if (!rdoKHTV.isSelected() && !rdoKHKH.isSelected()) {
                                DialogHelper.alert(this, "Xin hãy chọn tình trạng thành viên cho khách hàng!");
                                return false;
                            } else {
                                return true;
                            }
                        } else {
                            txtKHSoDT.setBackground(Color.yellow);
                            return false;
                        }
                    } else {
                        txtKHMail.setBackground(Color.yellow);
                        return false;
                    }
                } else {
                    txtKHMail.setBackground(Color.yellow);
                    return false;
                }
            }
        } else {
            txtKHTenKH.setBackground(Color.yellow);
            return false;
        }
    }
}
