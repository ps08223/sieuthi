/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.HoaDonDAO;
import DAO.KhachHangDAO;
import DAO.SanPhamDAO;
import DAO.TaiKhoanNVDAO;
import Entities.HoaDon;
import Entities.HoaDonCT;
import Entities.SanPham;
import Entities.TKHoatDong;
import Helper.DialogHelper;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.Collections;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author minhchau
 */
public class QuanLy1 extends javax.swing.JFrame {
    List<HoaDon> hdList;
    List<SanPham> spList;
    List<HoaDonCT> hdctList;
    int ChucNang = 0;
    
    public QuanLy1() {
        initComponents();
        init();   
    }
    
    void init() {
        setTitle("PHẦN MỀM QUẢN LÝ CỬA HÀNG̣");
        setVisible(true);
        jPanel11.setOpaque(false);
        jPanel12.setOpaque(false);
        setLocationRelativeTo(null);
        
        showHoaDon();
        showThongTin(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu8 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jPanel11 = new javax.swing.JPanel();
        lblQL1MaDH = new javax.swing.JLabel();
        lblQL1MaNV = new javax.swing.JLabel();
        lblQL1MaKH = new javax.swing.JLabel();
        txtQL1MaDH = new javax.swing.JTextField();
        btnQL1TimKiem = new javax.swing.JButton();
        txtQL1MaNV = new javax.swing.JTextField();
        txtQL1MaKH = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblQL1Gio = new javax.swing.JTable();
        lblQL1TenSP = new javax.swing.JLabel();
        lblQL1Gia = new javax.swing.JLabel();
        txtQL1Gia = new javax.swing.JTextField();
        lblQL1SL = new javax.swing.JLabel();
        txtQL1SL = new javax.swing.JTextField();
        btnQL1Them = new javax.swing.JButton();
        lblQL1GiamGia = new javax.swing.JLabel();
        txtQL1GiamGia = new javax.swing.JTextField();
        lblQL1Tong = new javax.swing.JLabel();
        txtQL1Tong = new javax.swing.JTextField();
        lblQL1Gio = new javax.swing.JLabel();
        cboQL1TenSP = new javax.swing.JComboBox<>();
        lblQL1TrangThai = new javax.swing.JLabel();
        rdoQL1DaThanhToan = new javax.swing.JRadioButton();
        rdoQL1ChuaThanhToan = new javax.swing.JRadioButton();
        btnQL1XoaSP = new javax.swing.JButton();
        btnQL1Luu = new javax.swing.JButton();
        btnQL1TaoMoi = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblQL1DSHD = new javax.swing.JTable();
        lblQL1DSHD = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mniHeThongDangXuat = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuKhachHang = new javax.swing.JMenu();
        mnuKho = new javax.swing.JMenu();
        mniKhoQLPhieuNhap = new javax.swing.JMenuItem();
        mniKhoQLTonKho = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        jMenu8.setText("jMenu8");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel1.setkGradientFocus(600);
        kGradientPanel1.setkStartColor(new java.awt.Color(153, 0, 153));

        lblQL1MaDH.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1MaDH.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1MaDH.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1MaDH.setText("Mã Đơn Hàng");

        lblQL1MaNV.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1MaNV.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1MaNV.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1MaNV.setText("Mã Nhân Viên");

        lblQL1MaKH.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1MaKH.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1MaKH.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1MaKH.setText("Mã Khách Hàng");

        btnQL1TimKiem.setText("Tìm Kiếm");
        btnQL1TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQL1TimKiemActionPerformed(evt);
            }
        });

        tblQL1Gio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tên Sản Phẩm", "Đơn Giá", "Số Lượng", "Giảm Giá", "Tổng Tiền"
            }
        ));
        tblQL1Gio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQL1GioMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblQL1Gio);

        lblQL1TenSP.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1TenSP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1TenSP.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1TenSP.setText("Tên Sản Phẩm");

        lblQL1Gia.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1Gia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1Gia.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1Gia.setText("Đơn Giá");

        txtQL1Gia.setEditable(false);

        lblQL1SL.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1SL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1SL.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1SL.setText("Số Lượng");

        btnQL1Them.setText("Thêm Vào Giỏ");
        btnQL1Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQL1ThemActionPerformed(evt);
            }
        });

        lblQL1GiamGia.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1GiamGia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1GiamGia.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1GiamGia.setText("Giảm Giá");

        lblQL1Tong.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1Tong.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1Tong.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1Tong.setText("Tổng");

        txtQL1Tong.setEditable(false);

        lblQL1Gio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQL1Gio.setForeground(new java.awt.Color(255, 51, 51));
        lblQL1Gio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQL1Gio.setText("GIỎ HÀNG");

        cboQL1TenSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboQL1TenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboQL1TenSPActionPerformed(evt);
            }
        });

        lblQL1TrangThai.setBackground(new java.awt.Color(255, 255, 255));
        lblQL1TrangThai.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblQL1TrangThai.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1TrangThai.setText("Trạng Thái");

        buttonGroup1.add(rdoQL1DaThanhToan);
        rdoQL1DaThanhToan.setSelected(true);
        rdoQL1DaThanhToan.setText("Đã Thanh Toán");

        buttonGroup1.add(rdoQL1ChuaThanhToan);
        rdoQL1ChuaThanhToan.setText("Chưa Thanh Toán");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblQL1Gio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                .addComponent(lblQL1MaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQL1MaDH))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                        .addComponent(lblQL1TenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cboQL1TenSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                        .addComponent(lblQL1MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtQL1MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblQL1MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnQL1TimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtQL1MaKH)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblQL1SL, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblQL1Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtQL1Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtQL1SL, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(lblQL1GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQL1GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblQL1Tong, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQL1Tong)
                            .addComponent(btnQL1Them, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(lblQL1TrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdoQL1DaThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(rdoQL1ChuaThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblQL1MaDH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQL1MaDH)
                    .addComponent(btnQL1TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQL1MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQL1MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQL1MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQL1MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQL1TenSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboQL1TenSP, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQL1Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQL1Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtQL1SL, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQL1SL, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnQL1Them, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQL1GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQL1GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQL1Tong, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQL1Tong, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQL1TrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoQL1DaThanhToan)
                    .addComponent(rdoQL1ChuaThanhToan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblQL1Gio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnQL1XoaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnQL1XoaSP.setText("Xóa Sản Phẩm");
        btnQL1XoaSP.setEnabled(false);
        btnQL1XoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQL1XoaSPActionPerformed(evt);
            }
        });

        btnQL1Luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save.png"))); // NOI18N
        btnQL1Luu.setText("Lưu");
        btnQL1Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQL1LuuActionPerformed(evt);
            }
        });

        btnQL1TaoMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/loop (1).png"))); // NOI18N
        btnQL1TaoMoi.setText("Tạo Mới");
        btnQL1TaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQL1TaoMoiActionPerformed(evt);
            }
        });

        tblQL1DSHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HĐ", "Mã NV", "Mã KH", "Ngày Mua", "Hình Thức", "Trạng Thái", "Tổng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblQL1DSHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQL1DSHDMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblQL1DSHD);
        if (tblQL1DSHD.getColumnModel().getColumnCount() > 0) {
            tblQL1DSHD.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblQL1DSHD.getColumnModel().getColumn(4).setResizable(false);
            tblQL1DSHD.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblQL1DSHD.getColumnModel().getColumn(6).setPreferredWidth(120);
        }

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblQL1DSHD.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblQL1DSHD.setForeground(new java.awt.Color(255, 255, 255));
        lblQL1DSHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQL1DSHD.setText("DANH SÁCH HÓA ĐƠN");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnQL1XoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(btnQL1TaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnQL1Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblQL1DSHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnQL1XoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnQL1TaoMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnQL1Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(lblQL1DSHD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );

        mnuHeThong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/User.png"))); // NOI18N
        mnuHeThong.setText("Hệ Thống");

        mniHeThongDangXuat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mniHeThongDangXuat.setText("Đăng Xuất");
        mniHeThongDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHeThongDangXuatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniHeThongDangXuat);
        mnuHeThong.add(jSeparator1);
        mnuHeThong.add(jSeparator2);

        jMenuBar1.add(mnuHeThong);

        mnuKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Boy.png"))); // NOI18N
        mnuKhachHang.setText("Khách Hàng");
        mnuKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuKhachHangMouseClicked(evt);
            }
        });
        jMenuBar1.add(mnuKhachHang);

        mnuKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Brick house.png"))); // NOI18N
        mnuKho.setText("Kho");

        mniKhoQLPhieuNhap.setText("Quản Lý Phiếu Nhập");
        mniKhoQLPhieuNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKhoQLPhieuNhapActionPerformed(evt);
            }
        });
        mnuKho.add(mniKhoQLPhieuNhap);

        mniKhoQLTonKho.setText("Quản Lý Tồn Kho");
        mniKhoQLTonKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniKhoQLTonKhoActionPerformed(evt);
            }
        });
        mnuKho.add(mniKhoQLTonKho);

        jMenuBar1.add(mnuKho);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Dollar.png"))); // NOI18N
        jMenu1.setText("Sản Phẩm");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniHeThongDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHeThongDangXuatActionPerformed
        TKHoatDong.setTaiKhoan("");
        TKHoatDong.setVaiTro("");
        this.dispose();
        DangNhap dn = new DangNhap();
        dn.pack();
        dn.setVisible(true);
    }//GEN-LAST:event_mniHeThongDangXuatActionPerformed

    private void mnuKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuKhachHangMouseClicked
        this.dispose();
        KhachHangFrame kh = new KhachHangFrame();
        kh.pack();
        kh.setVisible(true);
    }//GEN-LAST:event_mnuKhachHangMouseClicked

    private void btnQL1TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQL1TimKiemActionPerformed
        int MaHD;
        
        if (txtQL1MaDH.getText().isEmpty()) {
            DialogHelper.alert(this, "Xin vui lòng không để trống mã đơn hàng!");
            txtQL1MaDH.setBackground(Color.yellow);
            return;
        } else {
            try {
              MaHD = Integer.parseInt(txtQL1MaDH.getText());  
            } catch (NumberFormatException e) {
                DialogHelper.alert(this, "Xin nhập mã đơn hàng là dạng số >= 1!");
                txtQL1MaDH.setBackground(Color.yellow);
                return;
            }
        }
        
        XoaMauNen();
        boolean found = false;
        for (HoaDon hd: hdList) {
//            System.out.println(hd.MaHD);
            if (hd.MaHD == MaHD) {
                DialogHelper.alert(this, "Tìm thấy hóa đơn với mã tương ứng!");
                for (int i = 0; i < tblQL1DSHD.getRowCount(); i++) {
                    if (MaHD == Integer.parseInt(tblQL1DSHD.getValueAt(i, 0).toString())) {
                        tblQL1DSHD.setRowSelectionInterval(i, i);
                    }
                }
                txtQL1MaNV.setText(Integer.toString(hd.MaNV));
                txtQL1MaKH.setText(Integer.toString(hd.MaKH));
                ChucNang = 0;
                ShowGioHang(hd.MaHD);
                ShowSanPham(0);
                TongTien();
                found = true;
                txtQL1MaNV.setEditable(true);
            }
        }
        
        if (!found) {
            DialogHelper.alert(this, "Không tìm thấy mã đơn hàng tương ứng!");
        }
    }//GEN-LAST:event_btnQL1TimKiemActionPerformed

    private void tblQL1GioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQL1GioMouseClicked
        int i = tblQL1Gio.getSelectedRow();
        ShowSanPham(i);
    }//GEN-LAST:event_tblQL1GioMouseClicked

    private void btnQL1ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQL1ThemActionPerformed
        if (KiemTraChung()) {
            SanPhamDAO spDAO = new SanPhamDAO();
            int gia = Integer.parseInt(txtQL1Gia.getText());
            int soLuong = Integer.parseInt(txtQL1SL.getText());
            int giamGia = Integer.parseInt(txtQL1GiamGia.getText());
            int TonKho = spDAO.TonKho(spDAO.MaSanPham(cboQL1TenSP.getSelectedItem().toString()));

            if (soLuong > TonKho) {
                DialogHelper.alert(this, "Số lượng tồn kho không đủ cho số lượng đặt mua (Tồn kho: " + TonKho + ")!");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblQL1Gio.getModel();
            model.setRowCount(tblQL1Gio.getRowCount());

            Vector vector = new Vector();
            vector.add(cboQL1TenSP.getSelectedItem());
            vector.add(txtQL1Gia.getText());
            vector.add(txtQL1SL.getText());
            vector.add(txtQL1GiamGia.getText());

            int tong = (gia-(gia*giamGia/100))*soLuong;
            DecimalFormat format = new DecimalFormat("###,###");
            String tong1 = format.format(tong) + "VNĐ";

            vector.add(tong1);
            model.addRow(vector);

            TongTien();
        }
    }//GEN-LAST:event_btnQL1ThemActionPerformed

    private void btnQL1XoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQL1XoaSPActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblQL1Gio.getModel();
        int[] i = tblQL1Gio.getSelectedRows();
        int soHang = tblQL1Gio.getRowCount();
        
        for (int j = soHang; j >= 0; j--) {
            for (int a: i) {
                if (j == a) {
                    model.removeRow(j);
                }
            }
        }
        
        TongTien();        
    }//GEN-LAST:event_btnQL1XoaSPActionPerformed

    private void btnQL1LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQL1LuuActionPerformed
        int hang = tblQL1DSHD.getSelectedRow();
        
        HoaDonDAO hdDAO = new HoaDonDAO();
        SanPhamDAO spDAO = new SanPhamDAO();
        KhachHangDAO khDAO = new KhachHangDAO();
        if (ChucNang == 0) {
            if (KiemTraCapNhat()) {
                boolean found = false;
                for (HoaDon hd: hdList) {
                    if (hd.MaHD == Integer.parseInt(txtQL1MaDH.getText())) {
                        found = true;
                        
                        int TrangThai;
                        if (rdoQL1ChuaThanhToan.isSelected()) {
                            TrangThai = 0;
                        } else {
                            TrangThai = 1;
                        }
                        
                        hdDAO.Update(Integer.parseInt(txtQL1MaKH.getText()), 
                            Integer.parseInt(txtQL1MaNV.getText()),
                            TrangThai,
                            Integer.parseInt(txtQL1MaDH.getText()));
                        hdDAO.DeleteHDCT(Integer.parseInt(txtQL1MaDH.getText()));
                        for (int i = 0; i < tblQL1Gio.getRowCount(); i++) {
                            hdDAO.HDCTInsert(Integer.parseInt(txtQL1MaDH.getText()), 
                                    spDAO.MaSanPham(tblQL1Gio.getValueAt(i, 0).toString()), 
                                    Integer.parseInt(tblQL1Gio.getValueAt(i, 2).toString()), 
                                    Integer.parseInt(tblQL1Gio.getValueAt(i, 3).toString()));
                        }
                
                        DialogHelper.alert(this, "Cập nhật thành công!");
                        showHoaDon();
                        ThongTinHoaDon(hang);
                    }
                }
                    
                if (!found) {
                    DialogHelper.alert(this, "Mã đơn hàng không tồn tại!");
                }
            }
        } else {
            int MaKH;
            if (txtQL1MaKH.getText().isEmpty()) {
                khDAO.Insert();
                MaKH = khDAO.KHMoiNhat();
            } else {
                MaKH = Integer.parseInt(txtQL1MaKH.getText());
            }
            
            if (KiemTraChung()) {
                int TrangThai;
                if (rdoQL1ChuaThanhToan.isSelected()) {
                    TrangThai = 0;
                } else {
                    TrangThai = 1;
                }
                hdDAO.Insert(Integer.parseInt(txtQL1MaNV.getText()), MaKH, 0, TrangThai);
                int MaHD = hdDAO.MaHDMoiNhat();

                for (int i = 0; i < tblQL1Gio.getRowCount(); i++) {
                    hdDAO.HDCTInsert(MaHD, 
                            spDAO.MaSanPham(tblQL1Gio.getValueAt(i, 0).toString()), 
                            Integer.parseInt(tblQL1Gio.getValueAt(i, 2).toString()), 
                            Integer.parseInt(tblQL1Gio.getValueAt(i, 3).toString()));
                }

                DialogHelper.alert(this, "Thêm mới thành công!");
                showHoaDon();
                ThongTinHoaDon(tblQL1DSHD.getRowCount()-1);
            }
        }
    }//GEN-LAST:event_btnQL1LuuActionPerformed

    private void btnQL1TaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQL1TaoMoiActionPerformed
        TaiKhoanNVDAO tknvDAO = new TaiKhoanNVDAO();
        
        boolean Login = false;
        int MaNV = 0;
        if (!TKHoatDong.TaiKhoan.isEmpty()) {
            Login = true;
            MaNV = tknvDAO.MaNhanVien(TKHoatDong.TaiKhoan);
            txtQL1MaNV.setEditable(false);
        }
        
        if (!Login) {
            DialogHelper.alert(this, "Vui lòng đăng nhập lại!");
        }
        
        txtQL1MaNV.setText(Integer.toString(MaNV));
            
        XoaTrang();
        txtQL1Tong.setText("0");
        txtQL1SL.setEditable(true);
        txtQL1GiamGia.setEditable(true);
        ChucNang = 1;
    }//GEN-LAST:event_btnQL1TaoMoiActionPerformed

    private void tblQL1DSHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQL1DSHDMouseClicked
        txtQL1MaDH.setEditable(true);
        txtQL1MaNV.setEditable(true);
        btnQL1TimKiem.setEnabled(true);
        
        int i = tblQL1DSHD.getSelectedRow();
        ChucNang = 0;
        showThongTin(i);
    }//GEN-LAST:event_tblQL1DSHDMouseClicked

    private void mniKhoQLTonKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKhoQLTonKhoActionPerformed
        this.dispose();
        TonKho tk = new TonKho();
        tk.pack();
        tk.setVisible(true);
    }//GEN-LAST:event_mniKhoQLTonKhoActionPerformed

    private void cboQL1TenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboQL1TenSPActionPerformed
        String TenSP = cboQL1TenSP.getSelectedItem().toString();
        for (int j = 0; j < spList.size(); j++) {
            SanPham sp = spList.get(j);
            if (TenSP.equals(sp.Ten)) {
                txtQL1Gia.setText(Integer.toString(sp.Gia));
            }
        }
    }//GEN-LAST:event_cboQL1TenSPActionPerformed

    private void mniKhoQLPhieuNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniKhoQLPhieuNhapActionPerformed
        this.dispose();
        PhieuNhapFrame pn = new PhieuNhapFrame();
        pn.pack();
        pn.setVisible(true);
    }//GEN-LAST:event_mniKhoQLPhieuNhapActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        this.dispose();
        SanPhamFrame spf = new SanPhamFrame();
        spf.pack();
        spf.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLy1().setVisible(true);
            }
        });
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQL1Luu;
    private javax.swing.JButton btnQL1TaoMoi;
    private javax.swing.JButton btnQL1Them;
    private javax.swing.JButton btnQL1TimKiem;
    private javax.swing.JButton btnQL1XoaSP;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboQL1TenSP;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblQL1DSHD;
    private javax.swing.JLabel lblQL1Gia;
    private javax.swing.JLabel lblQL1GiamGia;
    private javax.swing.JLabel lblQL1Gio;
    private javax.swing.JLabel lblQL1MaDH;
    private javax.swing.JLabel lblQL1MaKH;
    private javax.swing.JLabel lblQL1MaNV;
    private javax.swing.JLabel lblQL1SL;
    private javax.swing.JLabel lblQL1TenSP;
    private javax.swing.JLabel lblQL1Tong;
    private javax.swing.JLabel lblQL1TrangThai;
    private javax.swing.JMenuItem mniHeThongDangXuat;
    private javax.swing.JMenuItem mniKhoQLPhieuNhap;
    private javax.swing.JMenuItem mniKhoQLTonKho;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenu mnuKhachHang;
    private javax.swing.JMenu mnuKho;
    private javax.swing.JRadioButton rdoQL1ChuaThanhToan;
    private javax.swing.JRadioButton rdoQL1DaThanhToan;
    private javax.swing.JTable tblQL1DSHD;
    private javax.swing.JTable tblQL1Gio;
    private javax.swing.JTextField txtQL1Gia;
    private javax.swing.JTextField txtQL1GiamGia;
    private javax.swing.JTextField txtQL1MaDH;
    private javax.swing.JTextField txtQL1MaKH;
    private javax.swing.JTextField txtQL1MaNV;
    private javax.swing.JTextField txtQL1SL;
    private javax.swing.JTextField txtQL1Tong;
    // End of variables declaration//GEN-END:variables
    
    public void showHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tblQL1DSHD.getModel();
        model.setRowCount(0);
        
        HoaDonDAO hdDAO = new HoaDonDAO();
        hdList = hdDAO.HDSelect();
        
        for (HoaDon hd: hdList) {
//            System.out.println(hd.CachThuc);
            Vector vector = new Vector();
            vector.add(hd.MaHD);
            vector.add(hd.MaNV);
            vector.add(hd.MaKH);
            vector.add(hd.NgayThanhToan);
            if (hd.CachThuc) {
                vector.add("Trực tuyến");
            } else {
                vector.add("Tại Cửa Hàng");
            }
            vector.add(hd.TrangThai);
            int TongTien1 = hdDAO.TongHoaDon(hd.MaHD);
            DecimalFormat format = new DecimalFormat("###,###");
            String TongTien2 = format.format(TongTien1);
            vector.add(TongTien2 + "VNĐ");
            model.addRow(vector);
        }
    }
    
    public void showThongTin(int i) {
        SanPhamDAO spDAO = new SanPhamDAO();
        spList = spDAO.Select();
        DefaultComboBoxModel cmodel = new DefaultComboBoxModel();
        for (int j = 0; j < spList.size(); j++) {
            SanPham sp = spList.get(j);
            cmodel.addElement(sp.Ten);
        }
        cboQL1TenSP.setModel(cmodel);
        
        ThongTinHoaDon(i);
    }
    
    public void ThongTinHoaDon(int i) {
        tblQL1DSHD.setRowSelectionInterval(i, i);
        int MaHD = Integer.parseInt(tblQL1DSHD.getValueAt(i, 0).toString());

        for (int j = 0; j < hdList.size(); j++) {
            HoaDon hd = hdList.get(j);
            if (MaHD == hd.MaHD) {
                txtQL1MaDH.setText(Integer.toString(hd.MaHD));
                txtQL1MaNV.setText(Integer.toString(hd.MaNV));
                txtQL1MaKH.setText(Integer.toString(hd.MaKH));
                if (hd.TrangThai) {
                    rdoQL1DaThanhToan.setSelected(true);
                } else {
                    rdoQL1ChuaThanhToan.setSelected(true);
                }
            }
        }
        
        ShowGioHang(MaHD);
        
        if (tblQL1Gio.getRowCount() > 0) {
            tblQL1Gio.setRowSelectionInterval(0, 0);
            ShowSanPham(0);
        
            TongTien();
        } else {
            txtQL1SL.setText("");
            txtQL1GiamGia.setText("");
            txtQL1Tong.setText("0VNĐ");
        }
    }
    
    public void ShowGioHang(int MaHD) {
        HoaDonDAO hdDAO = new HoaDonDAO();
        hdctList = hdDAO.HDCTSelect();
        if (hdctList.size() > 0) {
            btnQL1XoaSP.setEnabled(true);
        }
        DefaultTableModel model = (DefaultTableModel) tblQL1Gio.getModel();
        model.setRowCount(0);
        for (HoaDonCT hdct: hdctList) {
            if (hdct.MaHD == MaHD) {
                int GiaSP = hdDAO.GiaSanPham(hdct.MaSP);
                int SoLuong = hdDAO.SoLuong(hdct.MaHD, hdct.MaSP);
                int GiamGia = hdct.GiamGia;
                
                Vector vector = new Vector();
                vector.add(hdDAO.TenSanPham(hdct.MaSP));
                vector.add(GiaSP);
                vector.add(SoLuong);
                vector.add(GiamGia);
                int Gia1 = (GiaSP - (GiaSP*GiamGia/100))*SoLuong;
                DecimalFormat format = new DecimalFormat("###,###");
                String Gia2 = format.format(Gia1);
                vector.add(Gia2 + "VNĐ");
                model.addRow(vector);
            }
        }
    }
    
    public void ShowSanPham(int i) {
        if (tblQL1Gio.getRowCount() > 0) { 
            tblQL1Gio.setRowSelectionInterval(i, i);
            cboQL1TenSP.setSelectedItem(tblQL1Gio.getValueAt(i, 0));
            txtQL1Gia.setText(tblQL1Gio.getValueAt(i, 1).toString());
            txtQL1SL.setText(tblQL1Gio.getValueAt(i, 2).toString());
            txtQL1GiamGia.setText(tblQL1Gio.getValueAt(i, 3).toString());
        }
    }
    
    public void XoaMauNen() {
        txtQL1Gia.setBackground(Color.white);
        txtQL1GiamGia.setBackground(Color.white);
        txtQL1MaDH.setBackground(Color.white);
        txtQL1MaKH.setBackground(Color.white);
        txtQL1MaNV.setBackground(Color.white);
        txtQL1SL.setBackground(Color.white);
        txtQL1Tong.setBackground(Color.white);
    }
    
    public void TongTien() {
        int TongTien = 0;
        for (int j = 0; j < tblQL1Gio.getRowCount(); j++) {
            String tTongTien1 = tblQL1Gio.getValueAt(j, 4).toString();
            String tTongTien2 = tTongTien1.replace("VNĐ", "");
            TongTien += Integer.parseInt(tTongTien2.replace(",", ""));
        }
        
        DecimalFormat format = new DecimalFormat("###,###");
        txtQL1Tong.setText(format.format(TongTien) + "VNĐ");
    }
    
    public void XoaTrang() {
//        txtQL1MaDH.setEditable(false);
//        btnQL1TimKiem.setEnabled(false);
        tblQL1DSHD.removeRowSelectionInterval(tblQL1DSHD.getSelectedRow(), tblQL1DSHD.getSelectedRow());
        txtQL1MaDH.setText("");
        txtQL1MaKH.setText("");
        if (cboQL1TenSP.getItemCount() > 0) {
            cboQL1TenSP.setSelectedIndex(0);
        }
//        txtQL1Gia.setText("");
        txtQL1SL.setText("");
        txtQL1GiamGia.setText("");
        txtQL1Tong.setText("");
        DefaultTableModel model = (DefaultTableModel) tblQL1Gio.getModel();
        model.setRowCount(0);
    }
    
    public boolean KiemTraChung() {
        if (txtQL1SL.getText().isEmpty()) {
            DialogHelper.alert(this, "Không được để trống số lượng!");
            txtQL1SL.setBackground(Color.yellow);
            return false;
        } else {
            try {
                int i3 = Integer.parseInt(txtQL1SL.getText());
                if (i3 > 0) {
                    XoaMauNen();
                    if (txtQL1GiamGia.getText().isEmpty()) {
                        DialogHelper.alert(this, "Không được để trống giảm giá!");
                        txtQL1GiamGia.setBackground(Color.yellow);
                        return false;
                    } else {
                        try {
                            int i4 = Integer.parseInt(txtQL1GiamGia.getText());
                            if (i4 >= 0 && i4 <= 100) {
                                XoaMauNen();
                                return true;
                            } else {
                                DialogHelper.alert(this, "Xin nhập giảm giá >= 0 và <= 100!");
                                txtQL1GiamGia.setBackground(Color.yellow);
                                return false;
                            }
                        } catch (NumberFormatException e) {
                            DialogHelper.alert(this, "Xin nhập giảm giá dạng số!");
                            txtQL1GiamGia.setBackground(Color.yellow);
                            return false;
                        }
                    }
                } else {
                    DialogHelper.alert(this, "Xin nhập số lượng > 0!");
                    txtQL1SL.setBackground(Color.yellow);
                    return false;
                }
            } catch (NumberFormatException e) {
                DialogHelper.alert(this, "Xin nhập số lượng dạng số!");
                txtQL1SL.setBackground(Color.yellow);
                return false;
            }
        }
    }
    
    public boolean KiemTraCapNhat() {
        if (txtQL1MaDH.getText().isEmpty()) {
            DialogHelper.alert(this, "Không được để trống mã đơn hàng!");
            txtQL1MaDH.setBackground(Color.yellow);
            return false;
        } else {
            try {
                int i1 = Integer.parseInt(txtQL1MaDH.getText());
                if (i1 > 0) {
                    XoaMauNen();
                    if (txtQL1MaNV.getText().isEmpty()) {
                        DialogHelper.alert(this, "Không được để trống mã nhân viên!");
                        txtQL1MaNV.setBackground(Color.yellow);
                        return false;
                    } else {
                        try {
                            int i2 = Integer.parseInt(txtQL1MaNV.getText());
                            if (i2 > 0) {
                                XoaMauNen();
                                if (!txtQL1MaKH.getText().isEmpty()) {
                                    try {
                                        int i3 = Integer.parseInt(txtQL1MaKH.getText());
                                        if (i3 > 0) {
                                            XoaMauNen();
                                            return KiemTraChung();
                                        } else {
                                            DialogHelper.alert(this, "Xin nhập mã khách hàng > 0!");
                                            txtQL1MaNV.setBackground(Color.yellow);
                                            return false;
                                        }
                                    } catch (NumberFormatException e) {
                                        DialogHelper.alert(this, "Xin nhập mã khách hàng dạng số!");
                                        txtQL1MaKH.setBackground(Color.yellow);
                                        return false;
                                    }
                                } else {
                                    DialogHelper.alert(this, "Không được để trống mã khách hàng!");
                                    txtQL1MaKH.setBackground(Color.yellow);
                                    return false;
                                }
                            } else {
                                DialogHelper.alert(this, "Xin nhập mã nhân viên > 0!");
                                txtQL1MaNV.setBackground(Color.yellow);
                                return false;
                            }
                        } catch (NumberFormatException e) {
                            DialogHelper.alert(this, "Xin nhập mã nhân viên dạng số!");
                            txtQL1MaNV.setBackground(Color.yellow);
                            return false;
                        }
                    }
                } else {
                    DialogHelper.alert(this, "Xin nhập mã đơn hàng > 0!");
                    txtQL1MaDH.setBackground(Color.yellow);
                    return false;
                }
            } catch (NumberFormatException e) {
                DialogHelper.alert(this, "Xin nhập mã đơn hàng dạng số!");
                txtQL1MaDH.setBackground(Color.yellow);
                return false;
            }
        }
    }
    
//    public boolean KiemTraThemMoi() {
//        
//    }
}
